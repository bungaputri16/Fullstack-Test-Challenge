version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  redis:
    image: redis:6
    container_name: redis_cache
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    ports:
      - "5672:5672"   # koneksi dari aplikasi (AMQP)
      - "15672:15672" # dashboard management UI

  product-service:
    build: ../product-service
    container_name: product_service
    restart: always
    depends_on:
      - postgres
      - redis
      - rabbitmq
    ports:
      - "3000:3000"
    env_file:
      - .env

  order-service:
    build: ../order-service
    container_name: order_service
    restart: always
    depends_on:
      - postgres
      - redis
      - rabbitmq
    ports:
      - "4000:4000"
    env_file:
      - .env

  gateway-service:
    build: ../gateway-service
    ports:
      - "5000:5000"
    depends_on:
      - product-service
      - order-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s

  k6:
    image: loadimpact/k6
    container_name: k6
    depends_on:
      gateway-service:
        condition: service_healthy
    entrypoint: ["k6", "run", "/k6/load_test.js"]
    volumes:
      - ../k6:/k6
    networks:
      - default


 


volumes:
  postgres_data:
  
